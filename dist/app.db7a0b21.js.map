{"version":3,"sources":["app.ts"],"names":[],"mappings":"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","file":"app.db7a0b21.js","sourceRoot":"..\\src","sourcesContent":["// Closure\n{\n    // ****************** Variable Setup ******************\n\n    const newGame = document.querySelector(\".newgame\") as HTMLElement;\n    const rock = document.querySelector(\".rock\") as HTMLElement;\n    const paper = document.querySelector(\".paper\") as HTMLElement;\n    const scissors = document.querySelector(\".scissors\") as HTMLElement;\n    const hands = document.querySelector(\".hands\") as HTMLElement;\n    let yourHand = document.querySelector(\".yourID\") as HTMLElement;\n    let compHand = document.querySelector(\".compID\") as HTMLElement;\n    const yourScore = document.querySelector(\".yourScore\") as HTMLElement;\n    const compScore = document.querySelector(\".compScore\") as HTMLElement;\n    const results = document.querySelector(\".resultsText\") as HTMLElement;\n\n    const yourStartingHand: string = `<span class=\"yourID yourHand__rock rock\"><i class=\"far fa-hand-rock\"></i></span>`;\n    const compStartingHand: string = `<span class=\"compID compHand__rock rock\"><i class=\"far fa-hand-rock fa-flip-vertical\"></i></span>`;\n\n    // ****************** Data Structures Setup ******************\n\n    const scores: any = {\n        yourScore: 0,\n        // tslint:disable-next-line: object-literal-sort-keys\n        compScore: 0,\n    };\n\n    const choices: any = {\n        rock: \"rock\",\n        // tslint:disable-next-line: object-literal-sort-keys\n        paper: \"paper\",\n        scissors: \"scissors\",\n    };\n\n    const outcomes: any = {\n        rock: {\n            winsAgainst: \"scissors\",\n            // tslint:disable-next-line: object-literal-sort-keys\n            losesAgainst: \"paper\",\n        },\n\n        scissors: {\n            winsAgainst: \"paper\",\n            // tslint:disable-next-line: object-literal-sort-keys\n            losesAgainst: \"rock\",\n        },\n\n        paper: {\n            winsAgainst: \"rock\",\n            // tslint:disable-next-line: object-literal-sort-keys\n            losesAgainst: \"scissors\",\n        },\n    };\n\n    const selections: any = {\n        yourSelection: \"\",\n        // tslint:disable-next-line: object-literal-sort-keys\n        compSelection: \"\",\n    };\n\n    // ****************** Event Listeners Setup ******************\n\n    newGame.addEventListener(\"click\", () => {\n        resetGame();\n    });\n\n    newGame.addEventListener(\"keyup\", (e) => {\n    e.preventDefault();\n    if (e.keyCode === 13 || e.keyCode === 32) {\n        newGame.click();\n    }\n});\n\n    rock.addEventListener(\"click\", () => {\n        tResetHands();\n        selections.yourSelection = \"rock\";\n        tCompLogic();\n        const win = outcomes.rock.winsAgainst;\n        const loss = outcomes.rock.losesAgainst;\n        tGameResults(win, loss);\n        tResetBounce();\n    });\n\n    rock.addEventListener(\"keyup\", (e) => {\n        e.preventDefault();\n        if (e.keyCode === 13 || e.keyCode === 32) {\n            rock.click();\n        }\n    });\n\n    paper.addEventListener(\"click\", () => {\n        tResetHands();\n        selections.yourSelection = \"paper\";\n        tCompLogic();\n        const win = outcomes.paper.winsAgainst;\n        const loss = outcomes.paper.losesAgainst;\n        tGameResults(win, loss);\n        tResetBounce();\n    });\n\n    paper.addEventListener(\"keyup\", (e) => {\n        e.preventDefault();\n        if (e.keyCode === 13 || e.keyCode === 32) {\n            paper.click();\n        }\n    });\n\n    scissors.addEventListener(\"click\", () => {\n        tResetHands();\n        selections.yourSelection = \"scissors\";\n        tCompLogic();\n        const win = outcomes.scissors.winsAgainst;\n        const loss = outcomes.scissors.losesAgainst;\n        tGameResults(win, loss);\n        tResetBounce();\n    });\n\n    scissors.addEventListener(\"keyup\", (e) => {\n        e.preventDefault();\n        if (e.keyCode === 13 || e.keyCode === 32) {\n            scissors.click();\n        }\n    });\n\n    // ****************** Game Function Logic Setup ******************\n\n    // Computer logic used to decide selection\n    const compLogic = () => {\n        const randomNum = Math.floor((Math.random() * 3));\n        // tslint:disable-next-line: triple-equals\n        if (randomNum == 0) {\n            selections.compSelection = \"rock\";\n            // tslint:disable-next-line: triple-equals\n        } else if (randomNum == 1) {\n            selections.compSelection = \"paper\";\n            // tslint:disable-next-line: triple-equals\n        } else if (randomNum == 2) {\n            selections.compSelection = \"scissors\";\n        } else {\n            // tslint:disable-next-line: no-console\n            console.log(\"error!\");\n        }\n    };\n\n    // Necessary to ensure hand symbols are correctly formatted for screen display\n    const HandSignHTMLFormatting = () => {\n\n        let yourHandSign: string;\n        let compHandSign: string;\n\n        if (selections.yourSelection === \"scissors\") {\n            yourHandSign = `<span class=\"yourID yourHand__${selections.yourSelection} ${selections.yourSelection}\"><i class=\"far fa-hand-${selections.yourSelection} fa-flip-vertical\"></i></span>`;\n        } else {\n            yourHandSign = `<span class=\"yourID yourHand__${selections.yourSelection} ${selections.yourSelection}\"><i class=\"far fa-hand-${selections.yourSelection}\"></i></span>`;\n        }\n\n        if (selections.compSelection === \"scissors\") {\n            compHandSign = `<span class=\"compID compHand__${selections.compSelection} ${selections.compSelection}\"><i class=\"far fa-hand-${selections.compSelection} fa-flip\"></i></span>`;\n        } else {\n            compHandSign = `<span class=\"compID compHand__${selections.compSelection} ${selections.compSelection}\"><i class=\"far fa-hand-${selections.compSelection} fa-flip-vertical\"></i></span>`;\n        }\n\n        hands.innerHTML = yourHandSign + compHandSign;\n    };\n\n    // Runs game logic to decide round results, updates scores and displays result text\n    const gameResults = (win: string, loss: string) => {\n        hands.classList.toggle(\"bounce\");\n\n        setTimeout(() => {\n\n            HandSignHTMLFormatting();\n            if (win === selections.compSelection) {\n                scores.yourScore++;\n                results.textContent = \"You Win!\";\n                yourScore.textContent = scores.yourScore;\n\n            } else if (loss === selections.compSelection) {\n                scores.compScore++;\n                results.textContent = \"You Lose!\";\n                compScore.textContent = scores.compScore;\n\n            } else {\n                results.textContent = \"Tie!\";\n            }\n\n        }, 1800);\n    };\n\n    // New Game, resets all values\n    const resetGame = () => {\n        scores.yourScore = 0;\n        scores.compScore = 0;\n\n        yourScore.textContent = scores.yourScore;\n        compScore.textContent = scores.compScore;\n\n        results.textContent = \"\";\n\n        hands.innerHTML = yourStartingHand + compStartingHand;\n    };\n\n    // Causes hand symbols to reset back to rock at start of each round\n    // and removes results text\n    const resetHands = () => {\n        hands.innerHTML = yourStartingHand + compStartingHand;\n\n        results.textContent = \"\";\n    };\n\n    // Toggles bounce class off, so that on next round the gameResults function\n    // can toggle the class back on\n    const resetBounce = () => {\n        setTimeout(() => {\n\n            hands.classList.toggle(\"bounce\");\n\n            const yourTempHand = document.querySelector(\".yourID\") as HTMLElement;\n            const compTempHand = document.querySelector(\".compID\") as HTMLElement;\n\n            yourHand = yourTempHand;\n            compHand = compTempHand;\n\n        }, 2000);\n    };\n\n    // Slows down event listeners to prevent spamming of buttons\n    const throttled = (delay: number, fn: any) => {\n        let lastCall = 0;\n        return (...args: any) => {\n            const now = (new Date()).getTime();\n            if (now - lastCall < delay) {\n                return;\n            }\n            lastCall = now;\n            return fn(...args);\n        };\n    };\n\n    const tResetHands = throttled(2000, resetHands);\n    const tCompLogic = throttled(2000, compLogic);\n    const tGameResults = throttled(2000, gameResults);\n    const tResetBounce = throttled(2000, resetBounce);\n}\n"]}