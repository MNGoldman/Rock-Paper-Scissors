{"version":3,"sources":["app.ts"],"names":[],"mappings":"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","file":"app.b2590bc7.js","sourceRoot":"..\\src","sourcesContent":["  // ****************** Variable Setup ******************\r\n\r\n  const newGame = document.querySelector(\".newgame\") as Element;\r\n  const rock = document.querySelector(\".rock\") as Element;\r\n  const paper = document.querySelector(\".paper\") as Element;\r\n  const scissors = document.querySelector(\".scissors\") as Element;\r\n  const hands = document.querySelector(\".hands\") as Element;\r\n  let yourHand = document.querySelector(\".yourID\") as Element;\r\n  let compHand = document.querySelector(\".compID\") as Element;\r\n  const yourScore = document.querySelector(\".yourScore\") as Element;\r\n  const compScore = document.querySelector(\".compScore\") as Element;\r\n  const results = document.querySelector(\".resultsText\") as Element;\r\n\r\n  const yourStartingHand: string = `<span class=\"yourID yourHand__rock rock\"><i class=\"far fa-hand-rock\"></i></span>`;\r\n  const compStartingHand: string = `<span class=\"compID compHand__rock rock\"><i class=\"far fa-hand-rock fa-flip-vertical\"></i></span>`;\r\n\r\n  // ****************** Data Structures Setup ******************\r\n\r\n  const scores: any = {\r\n      yourScore: 0,\r\n      // tslint:disable-next-line: object-literal-sort-keys\r\n      compScore: 0,\r\n  };\r\n\r\n  const choices: any = {\r\n      rock: \"rock\",\r\n      // tslint:disable-next-line: object-literal-sort-keys\r\n      paper: \"paper\",\r\n      scissors: \"scissors\",\r\n  };\r\n\r\n  const outcomes: any = {\r\n      rock: {\r\n          winsAgainst: \"scissors\",\r\n          // tslint:disable-next-line: object-literal-sort-keys\r\n          losesAgainst: \"paper\",\r\n      },\r\n\r\n      scissors: {\r\n          winsAgainst: \"paper\",\r\n          // tslint:disable-next-line: object-literal-sort-keys\r\n          losesAgainst: \"rock\",\r\n      },\r\n\r\n      paper: {\r\n          winsAgainst: \"rock\",\r\n          // tslint:disable-next-line: object-literal-sort-keys\r\n          losesAgainst: \"scissors\",\r\n      },\r\n  };\r\n\r\n  const selections: any = {\r\n      yourSelection: \"\",\r\n      // tslint:disable-next-line: object-literal-sort-keys\r\n      compSelection: \"\",\r\n  };\r\n\r\n  // ****************** Event Listeners Setup ******************\r\n\r\n  newGame.addEventListener(\"click\", () => {\r\n      resetGame();\r\n  });\r\n\r\n  rock.addEventListener(\"click\", () => {\r\n      tResetHands();\r\n      selections.yourSelection = \"rock\";\r\n      tCompLogic();\r\n      const win = outcomes.rock.winsAgainst;\r\n      const loss = outcomes.rock.losesAgainst;\r\n      tGameResults(win, loss);\r\n      tResetBounce();\r\n  });\r\n\r\n  paper.addEventListener(\"click\", () => {\r\n      tResetHands();\r\n      selections.yourSelection = \"paper\";\r\n      tCompLogic();\r\n      const win = outcomes.paper.winsAgainst;\r\n      const loss = outcomes.paper.losesAgainst;\r\n      tGameResults(win, loss);\r\n      tResetBounce();\r\n  });\r\n\r\n  scissors.addEventListener(\"click\", () => {\r\n      tResetHands();\r\n      selections.yourSelection = \"scissors\";\r\n      tCompLogic();\r\n      const win = outcomes.scissors.winsAgainst;\r\n      const loss = outcomes.scissors.losesAgainst;\r\n      tGameResults(win, loss);\r\n      tResetBounce();\r\n  });\r\n\r\n  // ****************** Game Function Logic Setup ******************\r\n\r\n  // Computer logic used to decide selection\r\n  export const compLogic = () => {\r\n      const randomNum = Math.floor((Math.random() * 3));\r\n      // tslint:disable-next-line: triple-equals\r\n      if (randomNum == 0) {\r\n          selections.compSelection = \"rock\";\r\n          // tslint:disable-next-line: triple-equals\r\n      } else if (randomNum == 1) {\r\n          selections.compSelection = \"paper\";\r\n          // tslint:disable-next-line: triple-equals\r\n      } else if (randomNum == 2) {\r\n          selections.compSelection = \"scissors\";\r\n      } else {\r\n          // tslint:disable-next-line: no-console\r\n          console.log(\"error!\");\r\n      }\r\n  };\r\n\r\n  // Necessary to ensure hand symbols are correctly formatted for screen display\r\n  export const HandSignHTMLFormatting = () => {\r\n\r\n      let yourHandSign: string;\r\n      let compHandSign: string;\r\n\r\n      if (selections.yourSelection === \"scissors\") {\r\n          yourHandSign = `<span class=\"yourID yourHand__${selections.yourSelection} ${selections.yourSelection}\"><i class=\"far fa-hand-${selections.yourSelection} fa-flip-vertical\"></i></span>`;\r\n      } else {\r\n          yourHandSign = `<span class=\"yourID yourHand__${selections.yourSelection} ${selections.yourSelection}\"><i class=\"far fa-hand-${selections.yourSelection}\"></i></span>`;\r\n      }\r\n\r\n      if (selections.compSelection === \"scissors\") {\r\n          compHandSign = `<span class=\"compID compHand__${selections.compSelection} ${selections.compSelection}\"><i class=\"far fa-hand-${selections.compSelection} fa-flip\"></i></span>`;\r\n      } else {\r\n          compHandSign = `<span class=\"compID compHand__${selections.compSelection} ${selections.compSelection}\"><i class=\"far fa-hand-${selections.compSelection} fa-flip-vertical\"></i></span>`;\r\n      }\r\n\r\n      hands.innerHTML = yourHandSign + compHandSign;\r\n  };\r\n\r\n  // Runs game logic to decide round results, updates scores and displays result text\r\n  export const gameResults = (win: string, loss: string) => {\r\n      hands.classList.toggle(\"bounce\");\r\n\r\n      setTimeout(() => {\r\n\r\n          HandSignHTMLFormatting();\r\n          if (win === selections.compSelection) {\r\n              scores.yourScore++;\r\n              results.textContent = \"You Win!\";\r\n              yourScore.textContent = scores.yourScore;\r\n\r\n          } else if (loss === selections.compSelection) {\r\n              scores.compScore++;\r\n              results.textContent = \"You Lose!\";\r\n              compScore.textContent = scores.compScore;\r\n\r\n          } else {\r\n              results.textContent = \"Tie!\";\r\n          }\r\n\r\n      }, 1800);\r\n  };\r\n\r\n  // New Game, resets all values\r\n  export const resetGame = () => {\r\n      scores.yourScore = 0;\r\n      scores.compScore = 0;\r\n\r\n      yourScore.textContent = scores.yourScore;\r\n      compScore.textContent = scores.compScore;\r\n\r\n      results.textContent = \"\";\r\n\r\n      hands.innerHTML = yourStartingHand + compStartingHand;\r\n  };\r\n\r\n  // Causes hand symbols to reset back to rock at start of each round\r\n  // and removes results text\r\n  export const resetHands = () => {\r\n      hands.innerHTML = yourStartingHand + compStartingHand;\r\n\r\n      results.textContent = \"\";\r\n  };\r\n\r\n  // Toggles bounce class off, so that on next round the gameResults function\r\n  // can toggle the class back on\r\n  export const resetBounce = () => {\r\n      setTimeout(() => {\r\n\r\n          hands.classList.toggle(\"bounce\");\r\n\r\n          const yourTempHand = document.querySelector(\".yourID\") as Element;\r\n          const compTempHand = document.querySelector(\".compID\") as Element;\r\n\r\n          yourHand = yourTempHand;\r\n          compHand = compTempHand;\r\n\r\n      }, 2000);\r\n  };\r\n\r\n  export const throttled = (delay: number, fn: any) => {\r\n      let lastCall = 0;\r\n      return (...args: any) => {\r\n          const now = (new Date()).getTime();\r\n          if (now - lastCall < delay) {\r\n              return;\r\n          }\r\n          lastCall = now;\r\n          return fn(...args);\r\n      };\r\n  };\r\n\r\n  const tResetHands = throttled(2000, resetHands);\r\n  const tCompLogic = throttled(2000, compLogic);\r\n  const tGameResults = throttled(2000, gameResults);\r\n  const tResetBounce = throttled(2000, resetBounce);\r\n"]}